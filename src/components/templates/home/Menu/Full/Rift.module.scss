/*!
 * Copyright (c) 2022 RineaR. All rights reserved.
 */

@use "global";
@use "sass:math";

@mixin full {
  .container {
    $image-aspect-ratio: math.div(812, 419);
    $width: min(46rem, 50vh * #{$image-aspect-ratio});
    $height: calc(#{$width} / #{$image-aspect-ratio});
    width: $width;
    height: $height;
    position: relative;
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
    opacity: 1;
  }

  .back {
    position: absolute;
    width: 100%;
    height: 100%;

    .shown & {
      animation: openBack 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeBack 1s reverse forwards ease-in-out;
    }

    @keyframes openBack {
      0% {
        transform: scaleX(0);
      }
      60% {
        transform: scaleX(1);
      }
      100% {
        transform: scaleX(1);
      }
    }

    @keyframes closeBack {
      0% {
        transform: scaleX(0);
      }
      60% {
        transform: scaleX(1);
      }
      100% {
        transform: scaleX(1);
      }
    }

    .image {
      width: 100%;
      height: 100%;

      animation-iteration-count: infinite;
      animation-duration: 4.5s;
      animation-fill-mode: both;
      animation-direction: normal;
      animation-name: loop;

      @keyframes loop {
        0% {
          transform: scaleX(1);
          filter: brightness(1);
        }
        50% {
          transform: scaleX(1.03);
          filter: brightness(0.95);
        }
        100% {
          transform: scaleX(1);
          filter: brightness(1);
        }
      }
    }
  }

  .link {
    opacity: 0;
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;

    .shape {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .fill {
      pointer-events: fill;

      .hidden > & {
        pointer-events: none;
      }
    }
  }

  .mask {
    position: absolute;
    width: 100%;
    height: 100%;
    mask-image: url(/img/RiftMask.webp);
    mask-size: cover;

    .shown & {
      animation: openImage 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeImage 1s reverse forwards ease-in-out;
    }

    @keyframes openImage {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes closeImage {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
  }

  .masked {
    position: absolute;
    top: -5%;
    width: 100%;
    height: 100%;
    transition: opacity 500ms, transform 300ms;
    opacity: 1;
    filter: contrast(0.5);

    .hover & {
      transform: scale(0.95);
    }

    &.switching {
      opacity: 0;
    }
  }

  .leftSide {
    position: absolute;
    left: 25%;
    top: 50%;
    width: 40%;
    transform: translate(-50%, -50%) rotate(45deg) translateY(-100%) translateX(20%);

    .shown & {
      animation: openLeftSide 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeLeftSide 1s reverse forwards ease-in-out;
    }

    @keyframes openLeftSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes closeLeftSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
  }

  .indexIndicator {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row-reverse;
    padding: 0.1rem 0 0.1rem 0;
    gap: 2rem;

    .news {
      letter-spacing: 0.1rem;
      margin-right: -1rem;
      color: global.$light1;
    }

    .element {
      width: 1rem;
      height: 1rem;
      border: global.$light1 2px solid;
      border-radius: 1rem;
      transition: background 600ms;

      &.current {
        background: global.$light1;
      }
    }
  }

  .rightSide {
    position: absolute;
    left: 50%;
    top: calc(100% - 2rem);
    padding-left: 1rem;
    width: 16rem;
    transform: translate(-50%, -50%) rotate(-45deg) translateX(8rem);

    .shown & {
      animation: openRightSide 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeRightSide 1s reverse forwards ease-in-out;
    }

    @keyframes openRightSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes closeRightSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
  }

  .title {
    position: relative;
    color: global.$light1;
    font-size: 1rem;
    left: -2rem;
    padding: 0.1rem 0 0.1rem 1rem;
    text-overflow: ellipsis;
    letter-spacing: 0.1rem;
    transition: opacity 300ms, transform 300ms, background 300ms, color 300ms;
    transform: translateX(0);
    opacity: 1;

    .hover & {
      background: linear-gradient(to right, transparent 0%, global.$light1 1rem, transparent 100%);
      color: white;
    }

    &.switching {
      transform: translateX(1rem);
      opacity: 0;
    }
  }
}

@include global.media(phone) {
  .container {
    $image-aspect-ratio: math.div(812, 419);
    $width: min(46rem, 45vh * #{$image-aspect-ratio});
    $height: calc(#{$width} / #{$image-aspect-ratio});
    width: $width;
    height: $height;
    position: relative;
    top: 0;
    left: 50%;
    transform: translate(-50%, 0);
    opacity: 1;
  }

  .back {
    position: absolute;
    width: 100%;

    .shown & {
      animation: openBack 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeBack 1s reverse forwards ease-in-out;
    }

    @keyframes openBack {
      0% {
        transform: scaleX(0);
      }
      60% {
        transform: scaleX(1);
      }
      100% {
        transform: scaleX(1);
      }
    }

    @keyframes closeBack {
      0% {
        transform: scaleX(0);
      }
      60% {
        transform: scaleX(1);
      }
      100% {
        transform: scaleX(1);
      }
    }

    .image {
      width: 100%;
      height: 100%;

      animation-iteration-count: infinite;
      animation-duration: 4.5s;
      animation-fill-mode: both;
      animation-direction: normal;
      animation-name: loop;

      @keyframes loop {
        0% {
          transform: scaleX(1);
          filter: brightness(1);
        }
        50% {
          transform: scaleX(1.03);
          filter: brightness(0.95);
        }
        100% {
          transform: scaleX(1);
          filter: brightness(1);
        }
      }
    }
  }

  .mask {
    position: absolute;
    width: 100%;
    height: 100%;
    mask-image: url(/img/RiftMask.webp);
    mask-size: cover;

    .shown & {
      animation: openImage 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeImage 1s reverse forwards ease-in-out;
    }

    @keyframes openImage {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes closeImage {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    .masked {
      position: absolute;
      top: -5%;
      width: 100%;
      height: 100%;
      transition: opacity 500ms, transform 300ms;
      opacity: 1;
      filter: contrast(0.5);

      .hover & {
        transform: scale(0.95);
      }

      &.switching {
        opacity: 0;
      }
    }
  }

  .leftSide {
    position: absolute;
    left: 25%;
    top: 50%;
    width: 40%;
    transform: translate(-50%, -50%) rotate(45deg) translateY(-100%) translateX(10%);

    .shown & {
      animation: openLeftSide 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeLeftSide 1s reverse forwards ease-in-out;
    }

    @keyframes openLeftSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes closeLeftSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
  }

  .indexIndicator {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row-reverse;
    padding: 0.1rem 0 0.1rem 0;
    gap: 2rem;

    .news {
      letter-spacing: 0.1rem;
      margin-right: -1rem;
      color: global.$light1;
    }

    .element {
      width: 1rem;
      height: 1rem;
      border: global.$light1 2px solid;
      border-radius: 1rem;
      transition: background 600ms;

      &.current {
        background: global.$light1;
      }
    }
  }

  .rightSide {
    position: absolute;
    left: 50%;
    top: calc(100% - 2rem);
    padding-left: 1rem;
    width: 16rem;
    transform: translate(-50%, -50%) rotate(-45deg) translateX(8rem);

    .shown & {
      animation: openRightSide 1s normal forwards ease-in-out;
    }

    .hidden & {
      animation: closeRightSide 1s reverse forwards ease-in-out;
    }

    @keyframes openRightSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }

    @keyframes closeRightSide {
      0% {
        opacity: 0;
      }
      60% {
        opacity: 0;
      }
      100% {
        opacity: 1;
      }
    }
  }

  .title {
    position: relative;
    color: global.$light1;
    font-size: 1rem;
    left: -2rem;
    padding: 0.1rem 0 0.1rem 2rem;
    text-overflow: ellipsis;
    letter-spacing: 0.1rem;
    transition: opacity 300ms, transform 300ms, background 300ms, color 300ms;
    transform: translateX(0);
    opacity: 1;

    .hover & {
      background: linear-gradient(to right, transparent 0%, global.$light1 1rem, transparent 100%);
      color: white;
    }

    &.switching {
      transform: translateX(1rem);
      opacity: 0;
    }
  }

  .link {
    opacity: 0;
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;

    .shape {
      position: absolute;
      width: 100%;
      height: 100%;
    }

    .fill {
      pointer-events: fill;

      .hidden > & {
        pointer-events: none;
      }
    }
  }
}

@include global.media(tablet) {
  @include full
}

@include global.media(desktop) {
  @include full
}
